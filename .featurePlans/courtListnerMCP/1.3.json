{
  "taskId": "1.3",
  "title": "Configuration and Settings Setup",
  "phase": "1",
  "phaseTitle": "Project Foundation & Setup",
  "taskNumber": 3,
  "totalTasksInPhase": 3,
  "complexity": "moderate",
  "objective": "Create configuration system for API keys, endpoints, and server settings using appsettings.json and User Secrets",

  "contextManagement": {
    "isFirstInPhase": false,
    "isLastInPhase": true,
    "requiresContextLoad": false,
    "phaseBoundaryInstructions": "MANDATORY: After completing this task, create Phase 1 boundary summary and PAUSE for user approval before Phase 2"
  },

  "codebaseVerificationEvidence": {
    "verifiedFiles": [
      ".featurePlans/courtListnerMCP/CourtListnerMCPServer.md (lines 71-95)"
    ],
    "verifiedMethods": [],
    "assumptionAudit": {
      "assumptionLanguageDetected": false,
      "assumptionCount": 0,
      "confidence": "HIGH",
      "notes": "All configuration requirements verified from plan document"
    }
  },

  "agentInstructions": "**OBJECTIVE**: Create comprehensive configuration system for CourtListener API integration and server settings.\n\n**CRITICAL SECURITY**: API keys MUST NEVER be committed to source control. Use User Secrets for development.\n\n**PREREQUISITES**:\n- Tasks 1.1 and 1.2 completed\n- Navigate to `CourtListener.MCP.Server/` directory\n\n**EXECUTION STEPS**:\n\n1. **Create CourtListenerOptions Class**:\n   - Create file: `Configuration/CourtListenerOptions.cs`\n   - Class properties:\n     ```csharp\n     public class CourtListenerOptions\n     {\n         public string BaseUrl { get; set; } = \"https://www.courtlistener.com/api/rest/v4/\";\n         public string? ApiKey { get; set; }\n         public int TimeoutSeconds { get; set; } = 30;\n         public string? LogLevel { get; set; }\n     }\n     ```\n   - Add XML documentation comments\n   - Verify: File compiles without errors\n\n2. **Create appsettings.json**:\n   - Create file in project root (alongside Program.cs)\n   - Content:\n     ```json\n     {\n       \"Logging\": {\n         \"LogLevel\": {\n           \"Default\": \"Information\",\n           \"Microsoft.AspNetCore\": \"Warning\"\n         }\n       },\n       \"AllowedHosts\": \"*\",\n       \"CourtListener\": {\n         \"BaseUrl\": \"https://www.courtlistener.com/api/rest/v4/\",\n         \"TimeoutSeconds\": 30,\n         \"LogLevel\": \"Information\"\n       },\n       \"Kestrel\": {\n         \"Endpoints\": {\n           \"Http\": {\n             \"Url\": \"http://0.0.0.0:8000\"\n           }\n         }\n       }\n     }\n     ```\n   - NOTE: ApiKey is NOT in appsettings.json (security best practice)\n\n3. **Create appsettings.Development.json**:\n   - Create file in project root\n   - Content:\n     ```json\n     {\n       \"Logging\": {\n         \"LogLevel\": {\n           \"Default\": \"Debug\",\n           \"Microsoft.AspNetCore\": \"Information\"\n         }\n       },\n       \"CourtListener\": {\n         \"LogLevel\": \"Debug\"\n       }\n     }\n     ```\n\n4. **Create .env.example File**:\n   - Create file in solution root (not project root)\n   - Content:\n     ```bash\n     # CourtListener API Configuration\n     # Copy this file to .env and fill in your values\n     # DO NOT commit .env to source control\n\n     COURTLISTENER_API_KEY=your_api_key_here\n\n     # Optional: Override default base URL\n     # COURTLISTENER_BASE_URL=https://www.courtlistener.com/api/rest/v4/\n\n     # Optional: Override default timeout (seconds)\n     # COURTLISTENER_TIMEOUT=30\n     ```\n   - Verify: File created in solution root\n\n5. **Initialize User Secrets**:\n   - Run: `dotnet user-secrets init`\n   - Run: `dotnet user-secrets set \"CourtListener:ApiKey\" \"placeholder_key_for_testing\"`\n   - Verify: UserSecretsId added to .csproj file\n   - Verify: Secret stored (run `dotnet user-secrets list`)\n\n6. **Update .gitignore** (if not exists, create it):\n   - Ensure these lines exist:\n     ```\n     # User secrets\n     **/appsettings.*.json\n     !**/appsettings.json\n     !**/appsettings.Development.json\n\n     # Environment files\n     .env\n     .env.local\n\n     # User-specific files\n     *.user\n     *.suo\n     ```\n\n7. **Verify Configuration Setup**:\n   - Run: `dotnet build` - must succeed\n   - Verify: CourtListenerOptions.cs compiles\n   - Verify: Both appsettings files exist\n   - Verify: .env.example exists in solution root\n   - Verify: User secrets initialized\n   - Verify: No API keys in source files\n\n**DELIVERABLES**:\n- `Configuration/CourtListenerOptions.cs` - Options class\n- `appsettings.json` - Base configuration (NO API KEY)\n- `appsettings.Development.json` - Development overrides\n- `.env.example` - Environment variable template\n- User Secrets initialized with placeholder API key\n- `.gitignore` updated to prevent secret leaks\n\n**VERIFICATION CHECKLIST**:\n- [ ] CourtListenerOptions class created with all 4 properties\n- [ ] appsettings.json exists and contains CourtListener section (no API key)\n- [ ] appsettings.Development.json exists with dev log levels\n- [ ] .env.example created in solution root\n- [ ] User secrets initialized (`dotnet user-secrets list` works)\n- [ ] .gitignore prevents committing secrets\n- [ ] Project builds successfully\n- [ ] BaseUrl defaults to: https://www.courtlistener.com/api/rest/v4/\n- [ ] Timeout defaults to: 30 seconds\n- [ ] Server endpoint configured: http://0.0.0.0:8000",

  "successCriteria": [
    "Configuration loads from appsettings.json and environment variables",
    "API key never committed to source control (User Secrets or env vars only)",
    ".env.example documents all required settings",
    "CourtListenerOptions class has all required properties with correct defaults",
    "Project builds successfully with configuration in place"
  ],

  "criticalAnchors": [
    "API keys MUST use User Secrets or environment variables ONLY - never hardcoded",
    "BaseUrl MUST default to: https://www.courtlistener.com/api/rest/v4/",
    "Timeout MUST default to: 30 seconds",
    "Server MUST bind to: http://0.0.0.0:8000 (accept external connections)",
    "Server MUST listen on port 8000 at /mcp/ endpoint path",
    ".gitignore MUST prevent committing .env files and user secrets"
  ],

  "associatedArtifacts": [
    {
      "type": "class",
      "path": "CourtListener.MCP.Server/Configuration/CourtListenerOptions.cs",
      "description": "Configuration options class with BaseUrl, ApiKey, TimeoutSeconds, LogLevel"
    },
    {
      "type": "config",
      "path": "CourtListener.MCP.Server/appsettings.json",
      "description": "Base application configuration (no secrets)"
    },
    {
      "type": "config",
      "path": "CourtListener.MCP.Server/appsettings.Development.json",
      "description": "Development environment configuration overrides"
    },
    {
      "type": "documentation",
      "path": ".env.example",
      "description": "Environment variable template for required settings"
    },
    {
      "type": "config",
      "path": ".gitignore",
      "description": "Updated to prevent secret leaks"
    }
  ],

  "executionControls": {
    "estimatedDuration": "15-20 minutes",
    "requiresUserInput": false,
    "canRunOffline": true,
    "requiresExternalServices": false,
    "prerequisiteTasks": ["1.1", "1.2"],
    "blockedBy": [],
    "pauseBeforeExecution": false,
    "pauseAfterExecution": true,
    "pauseReason": "PHASE BOUNDARY - Phase 1 complete, create boundary summary and await user approval for Phase 2"
  },

  "metadata": {
    "generatedAt": "2025-10-06T18:00:00Z",
    "generatedBy": "L.E.A.S.H. Ingestion v3.2.0-git",
    "planSource": ".featurePlans/courtListnerMCP/CourtListnerMCPServer.md",
    "confidenceLevel": "HIGH"
  }
}
