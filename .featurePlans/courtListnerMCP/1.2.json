{
  "taskId": "1.2",
  "title": "Install NuGet Packages and Dependencies",
  "phase": "1",
  "phaseTitle": "Project Foundation & Setup",
  "taskNumber": 2,
  "totalTasksInPhase": 3,
  "complexity": "simple",
  "objective": "Add all required NuGet packages for MCP server, CourtListener integration, logging, and resilience",

  "contextManagement": {
    "isFirstInPhase": false,
    "isLastInPhase": false,
    "requiresContextLoad": false,
    "phaseBoundaryInstructions": null
  },

  "codebaseVerificationEvidence": {
    "verifiedFiles": [
      ".featurePlans/courtListnerMCP/CourtListnerMCPServer.md (lines 44-68)"
    ],
    "verifiedMethods": [],
    "assumptionAudit": {
      "assumptionLanguageDetected": false,
      "assumptionCount": 0,
      "confidence": "HIGH",
      "notes": "All package requirements verified from plan document. GAP decisions #1, #3, #6 integrated."
    }
  },

  "agentInstructions": "**OBJECTIVE**: Install all required NuGet packages for the CourtListener MCP server based on gap analysis decisions.\n\n**CRITICAL CONTEXT**: This task implements decisions from Gap Analysis:\n- GAP #1: Polly for HTTP resilience\n- GAP #3: Serilog for logging\n- GAP #6: Moq for testing\n\n**PREREQUISITES**:\n- Task 1.1 must be completed (solution and project structure exists)\n- Navigate to `CourtListener.MCP.Server/` directory\n\n**EXECUTION STEPS**:\n\n1. **Core MCP Packages**:\n   ```bash\n   dotnet add package ModelContextProtocol\n   dotnet add package ModelContextProtocol.AspNetCore\n   ```\n\n2. **HTTP Client & Resilience Packages** (GAP #1 Decision):\n   ```bash\n   dotnet add package Microsoft.Extensions.Http\n   dotnet add package Microsoft.Extensions.Http.Polly\n   ```\n\n3. **Configuration Packages**:\n   ```bash\n   dotnet add package Microsoft.Extensions.Configuration\n   ```\n\n4. **Logging Packages** (GAP #3 Decision - Serilog):\n   ```bash\n   dotnet add package Serilog.AspNetCore\n   dotnet add package Serilog.Sinks.Console\n   dotnet add package Serilog.Sinks.File\n   ```\n\n5. **Validation Packages**:\n   ```bash\n   dotnet add package System.ComponentModel.DataAnnotations\n   ```\n\n6. **Verify Package Installation**:\n   - Run: `dotnet restore`\n   - Run: `dotnet build`\n   - Both must succeed without errors\n   - Verify: Open `CourtListener.MCP.Server.csproj` and confirm all packages listed\n\n**PACKAGE SUMMARY** (11 packages total):\n- **MCP**: ModelContextProtocol, ModelContextProtocol.AspNetCore\n- **HTTP**: Microsoft.Extensions.Http, Microsoft.Extensions.Http.Polly\n- **Configuration**: Microsoft.Extensions.Configuration\n- **Logging**: Serilog.AspNetCore, Serilog.Sinks.Console, Serilog.Sinks.File\n- **Validation**: System.ComponentModel.DataAnnotations\n\n**DELIVERABLES**:\n- Updated `CourtListener.MCP.Server.csproj` with all package references\n- Successful `dotnet restore` and `dotnet build`\n\n**VERIFICATION CHECKLIST**:\n- [ ] All 11 packages added to .csproj file\n- [ ] `dotnet restore` succeeds\n- [ ] `dotnet build` succeeds with no errors\n- [ ] No package version conflicts\n- [ ] Project still targets net9.0",

  "successCriteria": [
    "All packages restore successfully with `dotnet restore`",
    "No dependency conflicts reported",
    "Package versions documented in project file",
    "`dotnet build` succeeds after package installation",
    "All 11 required packages present in .csproj file"
  ],

  "criticalAnchors": [
    "MUST use official ModelContextProtocol packages from NuGet (not preview/beta)",
    "MUST include Polly packages (GAP #1 decision - resilience strategy)",
    "MUST include Serilog packages (GAP #3 decision - logging framework)",
    "DO NOT add test packages yet (added in Phase 8 when creating test project)",
    "Package versions: Use latest stable (not preview) unless specified"
  ],

  "associatedArtifacts": [
    {
      "type": "project",
      "path": "CourtListener.MCP.Server/CourtListener.MCP.Server.csproj",
      "description": "Updated with 11 NuGet package references"
    }
  ],

  "executionControls": {
    "estimatedDuration": "5-10 minutes",
    "requiresUserInput": false,
    "canRunOffline": false,
    "requiresExternalServices": true,
    "externalServiceNotes": "Requires internet connection to download NuGet packages",
    "prerequisiteTasks": ["1.1"],
    "blockedBy": [],
    "pauseBeforeExecution": false,
    "pauseAfterExecution": false
  },

  "gapDecisionReferences": [
    {
      "gapId": "GAP #1",
      "gapTitle": "HTTP Client Retry and Resilience Strategy",
      "decision": "Polly with Comprehensive Resilience Policies",
      "packages": ["Microsoft.Extensions.Http.Polly"]
    },
    {
      "gapId": "GAP #3",
      "gapTitle": "Logging Framework and Strategy",
      "decision": "Serilog with Console and File Sinks",
      "packages": ["Serilog.AspNetCore", "Serilog.Sinks.Console", "Serilog.Sinks.File"]
    }
  ],

  "metadata": {
    "generatedAt": "2025-10-06T18:00:00Z",
    "generatedBy": "L.E.A.S.H. Ingestion v3.2.0-git",
    "planSource": ".featurePlans/courtListnerMCP/CourtListnerMCPServer.md",
    "confidenceLevel": "HIGH"
  }
}
